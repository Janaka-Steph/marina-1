on:
  push:
    tags:
    - 'v*'

name: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # setup nodejs
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      # cache our node modules  
      - uses: actions/cache@v1
        env:
          node-version: 14
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-node${{ env.node-version }}
      

      # get current  tag
      - name: tag
        id: next_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
     
      - name: version
        id: next_version
        run: |
          tag=${{ steps.next_tag.outputs.tag }}
          echo ::set-output name=version::${tag:1}

      - name: Increment value automatically
        uses: yoichiro/gh-action-increment-value@v3
        with:
          # A directory where has the target file
          target_directory: 'public'
          target_file: 'manifest.json'
          # A prefix string
          prefix: 'version":'
          # A suffix string
          suffix: ','
          # A commit message
          commit_message: ${{ steps.next_version.outputs.version }}
        
      # Build extension
      - name: Install and build
        run: |
          npm install
          npm run web-ext:build
      
      # Release to github       
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web-ext-artifacts/marina-${{ steps.next_tag.outputs.tag }}.zip
          asset_name: marina-${{ steps.next_tag.outputs.tag }}.zip
          asset_content_type: application/zip




          echo test, and deploy your project.
